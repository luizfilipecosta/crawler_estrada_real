continue
 @crawler.w_lines
continue
points = CSV.read("./test/fixtures/file.csv")
result[1]
result[0]
result = CSV.read("./test/fixtures/file.csv")
continue
CrawlerEstradaReal.new("./test/fixtures/links_points.txt").lines
CrawlerEstradaReal.new("./test/fixtures/links_points.txt")
continue
CrawlerEstradaReal.new("./test/fixtures/links_points.txt")
CrawlerEstradaReal.new("./test/fixtures/links_points.txt").lines
continue
CrawlerEstradaReal.new("./test/fixtures/links_points.txt").lines
CrawlerEstradaReal.new("./test/fixtures/links_points.txt")
@crawler.method_name
@crawler
continue
CrawlerEstradaReal.new("./test/fixtures/links_points.txt").lines
@crawler
@crawler.file
@crawler.lines
@crawler
continue
pag.css(".guide-content-text").text.gsub("\n", ' ').squeeze(' ')
pag.css(".guide-content-text").text
pag.css(".guide-h1").text
pag.css(".guide-h1")
continue
pag
pag.css('iframe')
pag.css('iframes')
pag.css('iframe')
URL_PAG
pag.css('iframe')
pag
continue
pag.css('iframe')
pag.css('a[title*="Cli"]')
pag.css('a')
continue
lines[0].gsub("\n","")
lines[0].gsub("\n"," ")
lines[0]
continue
lines = file.map{|line| line}
file.map{|line| line}.count
file.map{|line| line}
continue
file.to_s
file
